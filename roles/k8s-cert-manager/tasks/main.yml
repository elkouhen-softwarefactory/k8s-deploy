- name: "Helm List"
  command: /usr/local/bin/helm list
  become: yes
  become_user: root
  register: helm_list
  changed_when: False

# LINT-ERROR
- name: "Install the CustomResourceDefinition resources separately"
  command: kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml
  become: yes
  become_user: root
  when: "'cert-manager' not in helm_list.stdout"

- name: "Create the namespace for cert-manager"
  command: kubectl create namespace cert-manager
  become: yes
  become_user: root
  when: "'cert-manager' not in helm_list.stdout"

- name: "Label the cert-manager namespace to disable resource validation"
  command: kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true
  become: yes
  become_user: root
  when: "'cert-manager' not in helm_list.stdout"

- name: "Add the Jetstack Helm repository"
  command: /usr/local/bin/helm repo add jetstack https://charts.jetstack.io
  become: yes
  become_user: root

- name: "Update your local Helm chart repository cache"
  command: /usr/local/bin/helm repo update
  become: yes
  become_user: root

- name: "Install the cert-manager Helm chart"
  command: /usr/local/bin/helm install --name cert-manager --namespace cert-manager --set webhook.enabled=false jetstack/cert-manager
  become: yes
  become_user: root
  when: "'cert-manager' not in helm_list.stdout"

- name: "Configure Daemon.json"
  template:
    src: secret-accss-key
    dest: /root/secret-access-key
  become: yes
  become_user: root
  when: registry is defined

- name: "Install the cert-manager Helm chart"
  command: kubectl create secret generic acme-route53 -n=kube-system --from-file=/root/secret-access-key
  become: yes
  become_user: root
  when: "'cert-manager' not in helm_list.stdout"

- name: "Create Letsencrypt Issuers"
  include_tasks: create-issuer.yml
  loop_control:
    loop_var: namespace_item
  with_items: "{{ namespaces }}"
  when: "'cert-manager' not in helm_list.stdout"
