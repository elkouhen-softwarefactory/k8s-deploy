- name: "Status file /root/helm-v2.14.0-linux-amd64.tar.gz"
  stat:
    path:  "/root/helm-v2.14.0-linux-amd64.tar.gz"
  register: helm_status
  become: yes
  become_user: root

- name: "Download helm"
  get_url:
    url: https://storage.googleapis.com/kubernetes-helm/helm-v2.14.0-linux-amd64.tar.gz
    dest: /root
  become: yes
  become_user: root
  when: not helm_status.stat.exists

- name: "Extract helm-v2.14.0-linux-amd64.tar.gz into /root"
  unarchive:
    src: /root/helm-v2.14.0-linux-amd64.tar.gz
    dest: /root
    remote_src: True
  become: yes
  become_user: root

- name: Copy /root/linux-amd64/helm to /usr/local/bin
  copy:
    src: /root/linux-amd64/helm
    dest: /usr/local/bin/helm
    remote_src: True
    owner: root
    mode: 0744
  become: yes
  become_user: root

- name: "Download helmfile"
  get_url:
    url: https://github.com/roboll/helmfile/releases/download/v0.69.0/helmfile_linux_amd64
    dest: /usr/local/bin/helmfile
  become: yes
  become_user: root

- name: "Make helmfile executable"
  file:
    path: /usr/local/bin/helmfile
    mode: 0755
  become: yes
  become_user: root

- name: "Create cluster role binding for cluster-admin namespace default"
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'cluster-role-binding-admin.yaml') }}"
  become: yes
  become_user: root

- name: "Create cluster role binding for cluster-admin namespace default"
  k8s_raw:
    state: present
    definition: "{{ lookup('file', 'cluster-role-binding-tiller.yaml') }}"
  become: yes
  become_user: root

# LINT-ERROR
- name: "Execute helm reset"
  command: /usr/local/bin/helm reset
  become: yes
  become_user: root
  ignore_errors: True

# LINT-ERROR
- name: "Execute helm init"
  command: /usr/local/bin/helm init --history-max 200
  become: yes
  become_user: root

# LINT-ERROR
- name: "Check helm list"
  command: /usr/local/bin/helm list
  become: yes
  become_user: root
  register: result
  until: "'Error' not in result.stderr"
  retries: 50
  delay: 5